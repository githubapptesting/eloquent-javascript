function ArraySeq(array) {
    this.array = array;
}

Object.defineProperty(ArraySeq.prototype, 'iterator', {
    get: function() {
        return {
            array: this.array,
            index: 0,
            hasnext: function() {
                return this.array.length > this.index ? true : false;
            },
            next: function() {
                var elem = this.array[this.index];
                this.index++;
                return elem;
            }
        };
    }
});

function RangeSeq(from, to) {
    this.from = from;
    this.to = to;
}

Object.defineProperty(RangeSeq.prototype, 'iterator', {
    get: function() {
        var array = [];
        for (var i = this.from; i < this.to; i++) {
            array.push(i);
        }
        return {
            array: array,
            index: 0,
            hasnext: function() {
                return this.array.length > this.index ? true : false;
            },
            next: function() {
                var elem = this.array[this.index];
                this.index++;
                return elem;
            }
        };
    }
});

function logFive(obj) {
    var itr = obj.iterator;
    var count = 0;
    while (itr.hasnext() && count < 5) {
        console.log(itr.next());
        count++;
    }
}